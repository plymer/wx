/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WxmapImport } from './routes/wxmap'
import { Route as PublicImport } from './routes/public'
import { Route as OutlooksImport } from './routes/outlooks'
import { Route as ObservationsImport } from './routes/observations'
import { Route as AviationImport } from './routes/aviation'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const WxmapRoute = WxmapImport.update({
  id: '/wxmap',
  path: '/wxmap',
  getParentRoute: () => rootRoute,
} as any)

const PublicRoute = PublicImport.update({
  id: '/public',
  path: '/public',
  getParentRoute: () => rootRoute,
} as any)

const OutlooksRoute = OutlooksImport.update({
  id: '/outlooks',
  path: '/outlooks',
  getParentRoute: () => rootRoute,
} as any)

const ObservationsRoute = ObservationsImport.update({
  id: '/observations',
  path: '/observations',
  getParentRoute: () => rootRoute,
} as any)

const AviationRoute = AviationImport.update({
  id: '/aviation',
  path: '/aviation',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/aviation': {
      id: '/aviation'
      path: '/aviation'
      fullPath: '/aviation'
      preLoaderRoute: typeof AviationImport
      parentRoute: typeof rootRoute
    }
    '/observations': {
      id: '/observations'
      path: '/observations'
      fullPath: '/observations'
      preLoaderRoute: typeof ObservationsImport
      parentRoute: typeof rootRoute
    }
    '/outlooks': {
      id: '/outlooks'
      path: '/outlooks'
      fullPath: '/outlooks'
      preLoaderRoute: typeof OutlooksImport
      parentRoute: typeof rootRoute
    }
    '/public': {
      id: '/public'
      path: '/public'
      fullPath: '/public'
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/wxmap': {
      id: '/wxmap'
      path: '/wxmap'
      fullPath: '/wxmap'
      preLoaderRoute: typeof WxmapImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/aviation': typeof AviationRoute
  '/observations': typeof ObservationsRoute
  '/outlooks': typeof OutlooksRoute
  '/public': typeof PublicRoute
  '/wxmap': typeof WxmapRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/aviation': typeof AviationRoute
  '/observations': typeof ObservationsRoute
  '/outlooks': typeof OutlooksRoute
  '/public': typeof PublicRoute
  '/wxmap': typeof WxmapRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/aviation': typeof AviationRoute
  '/observations': typeof ObservationsRoute
  '/outlooks': typeof OutlooksRoute
  '/public': typeof PublicRoute
  '/wxmap': typeof WxmapRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/aviation'
    | '/observations'
    | '/outlooks'
    | '/public'
    | '/wxmap'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/aviation' | '/observations' | '/outlooks' | '/public' | '/wxmap'
  id:
    | '__root__'
    | '/'
    | '/aviation'
    | '/observations'
    | '/outlooks'
    | '/public'
    | '/wxmap'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AviationRoute: typeof AviationRoute
  ObservationsRoute: typeof ObservationsRoute
  OutlooksRoute: typeof OutlooksRoute
  PublicRoute: typeof PublicRoute
  WxmapRoute: typeof WxmapRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AviationRoute: AviationRoute,
  ObservationsRoute: ObservationsRoute,
  OutlooksRoute: OutlooksRoute,
  PublicRoute: PublicRoute,
  WxmapRoute: WxmapRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/aviation",
        "/observations",
        "/outlooks",
        "/public",
        "/wxmap"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/aviation": {
      "filePath": "aviation.tsx"
    },
    "/observations": {
      "filePath": "observations.tsx"
    },
    "/outlooks": {
      "filePath": "outlooks.tsx"
    },
    "/public": {
      "filePath": "public.tsx"
    },
    "/wxmap": {
      "filePath": "wxmap.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
